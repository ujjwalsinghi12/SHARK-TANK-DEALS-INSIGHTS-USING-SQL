use  project_schema;
select * from abc;

-- total episodes

select max(`Ep. No.`) from abc;
select count(distinct`Ep. No.`) from abc;

-- pitches 

select count(distinct brand) from abc;

-- pitches converted

select cast(sum(a.converted_not_converted) as float) /cast(count(*) as float) from (
select `Amount Invested lakhs` , case when `Amount Invested lakhs`>0 then 1 else 0 end as converted_not_converted from abc) a;

-- total male

select sum(male) from abc;

-- total female

select sum(female) from abc;

-- gender ratio

select sum(female)/sum(male) from abc;

-- total invested amount

select sum(`Amount Invested lakhs`) from abc;

-- avg equity taken

select avg(a.`Equity Taken %`) from
(select * from abc where `Equity Taken %`>0) a;

-- highest deal taken

select max(`Amount Invested lakhs`) from abc;

-- higheest equity taken

select max(`Equity Taken %`) from abc;

-- startups having at least women

SELECT SUM(a.Female) AS total_female_startups
FROM (
    SELECT Female, CASE WHEN Female > 0 THEN 1 ELSE 0 END AS female_count
    FROM abc 
) a
HAVING SUM(a.Female) > 0;


-- pitches converted having atleast ne women

select * from abc;


SELECT SUM(b.female_count) AS total_female_count
FROM (
    SELECT 
        CASE WHEN a.Female > 0 THEN 1 ELSE 0 END AS female_count,
        a.*
    FROM (
        SELECT * 
        FROM abc 
        WHERE Deal != 'No Deal'
    ) a
) b;



-- avg team members

select avg(`Team members`) from abc;

-- amount invested per deal

select avg(a.`Amount Invested lakhs`) amount_invested_per_deal from
(select * from abc where deal!='No Deal') a;

-- avg age group of contestants

select `Avg age`,count(`Avg age`) cnt from abc group by `Avg age` order by cnt desc;

-- location group of contestants

select location,count(location) cnt from abc group by location order by cnt desc;

-- sector group of contestants

select sector,count(sector) cnt from abc group by sector order by cnt desc;


-- partner deals

select partners,count(partners) cnt from abc  where partners!='-' group by partners order by cnt desc;

-- making the matrix


select * from abc;

select 'Ashnner' as keyy,count(`Ashneer Amount Invested`) from abc where `Ashneer Amount Invested` is not null;


select 'Ashnner' as keyy,count(`Ashneer Amount Invested`) from abc 
where `Ashneer Amount Invested` is not null AND `Ashneer Amount Invested`!=0;

SELECT 'Ashneer' as keyy,SUM(C.`Ashneer Amount Invested`),AVG(C.`Ashneer Equity Taken %`) 
FROM (SELECT * FROM abc  WHERE `Ashneer Equity Taken %`!=0 AND `Ashneer Equity Taken %` IS NOT NULL) C;


select m.keyy,m.total_deals_present,m.total_deals,n.total_amount_invested,n.avg_equity_taken from
(select a.keyy,a.total_deals_present,b.total_deals from(
select 'Ashneer' as keyy,count(`Ashneer Amount Invested`) total_deals_present from abc
 where `Ashneer Amount Invested` is not null) a
 inner join (
SELECT 'Ashneer' AS keyy, COUNT(`Ashneer Amount Invested`) AS total_deals
FROM abc 
WHERE `Ashneer Amount Invested` IS NOT NULL AND `Ashneer Amount Invested` != 0) b 
on a.keyy=b.keyy) m
inner join
(SELECT  'Ashneer' AS keyy,SUM(C.`Ashneer Amount Invested`) AS total_amount_invested,
AVG(C.`Ashneer Equity Taken %`) AS avg_equity_taken
FROM  abc C
WHERE  C.`Ashneer Equity Taken %` != 0 AND C.`Ashneer Equity Taken %` IS NOT NULL) n
on m.keyy=n.keyy;

-- which is the startup in which the highest amount has been invested in each domain/sector

SELECT c.*
FROM (SELECT  Brand, Sector, `Amount Invested lakhs`,RANK() OVER (PARTITION BY sector ORDER BY `Amount Invested lakhs` DESC) AS rnk
    FROM abc
) c WHERE c.rnk = 1;
